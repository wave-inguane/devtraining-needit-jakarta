<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description/>
        <field>state</field>
        <global>true</global>
        <messages/>
        <name>UnitTEST</name>
        <order/>
        <script><![CDATA[function onLoad() {
	g_form.addErrorMessage("CL: UnitTEST : " );
	
	//Form header info and error messages
	g_form.addInfoMessage('<font color="green">addInfoMessage (Green)</font>');
	g_form.addErrorMessage('<b>addErrorMessage (Bold)</b>');
	
	//Field info and error messages
	g_form.showFieldMsg('caller_id', 'showFieldMsg Info Message', 'info');
	g_form.showFieldMsg('caller_id', 'showFieldMsg Error Message', 'error');
}

/*
function onLoad() {
	highlights('incident','assignment_group');
	g_form.addDecoration('description', 'icon-info', 'preferred member');
	//crud_read();
	//crud_create();
	//crud_update();
	//crud_remove();
}
 */
//-----

//---
function crud_read(){
	
	//Type appropriate comment here, and begin script below
	// new GlideAjax object referencing name of AJAX script include
	var ga = new GlideAjax('MiniJakartaCS');
	
	var strQuery = 'priority=1';
	strQuery = strQuery + '^active=true';
	var className = 'InguaneClientUtilTest2';
	
	ga.addParam('sysparm_class_name',className);
	ga.addParam('sysparm_function_name','on_Load GET');
	ga.addParam('sysparm_table_name','x_58872_needit_needit');
	
	ga.addParam('sysparm_client_infox', 'number');
	ga.addParam('sysparm_client_infoy', 'u_requested_for');
	
	ga.addParam('sysparm_strQuery',strQuery);//clientparams
	//pass all params be fore the method call
	// add name parameter to define which function we want to call
	// method name in script include will be helloWorld
	ga.addParam('sysparm_name','read');
	try{
		// submit request to server, call ajaxResponse function with server response
		ga.getXML(HelloWorldParse);
		
	}catch(err){
		jslog('&CLIENT&: TWD A JavaScript runtime error : ' + err.message);
		g_form.addErrorMessage("&CLIENT&: TWD error : " + err.messag);
	}
	
	function HelloWorldParse(serverResponse) {
		// get result element and attributes
		
		var result = serverResponse.responseXML.getElementsByTagName("result");
		var message = result[0].getAttribute("message");
		//check for message attribute and alert user
		if(message) g_form.addInfoMessage(message);
			
		try{
			//build output to display on client for testing
			var output = "&CLIENT&: DATA : ";
			// get favorite elements
			var favorites = serverResponse.responseXML.getElementsByTagName("favorite");
			for(var i = 0; i < favorites.length; i++) {
				var name = favorites[i].getAttribute("name");
				var value = favorites[i].getAttribute("value");
				output += name + " : " + value + "\n";
			}
			//alert(output);
			g_form.addInfoMessage(output);
		}catch(err){
			g_form.addErrorMessage("&CLIENT&: TWD error : " + err.messag);
		}
	}
}//end crud_read -------------------------------------------------------------------

function crud_create(){
	
	var className = 'InguaneClientUtilTest2';
	g_form.addInfoMessage("$CLIENT: " + className);
	//create ajax object
	var ga = new GlideAjax('MiniJakartaCS');
	//provide the table
	ga.addParam('sysparm_table_name', 'x_58872_needit_needit');
	ga.addParam('sysparm_class_name',className);
	ga.addParam('sysparm_function_name','on_Load POST');
	//-------------------------- DATA TO POST ------------------
	
	ga.addParam('sysparm_short_description', 'Avelino First Arnaldo');
	ga.addParam('sysparm_record_number', 'NI000001');
	ga.addParam('sysparm_u_requested_for_email', 'Inguane@gmail.com');
	ga.addParam('sysparm_u_request_type', 'Human Resources');
	ga.addParam('sysparm_u_what_needed', 'Human Resources');
	ga.addParam('sysparm_u_when_needed', '2017-10-06 08:07:53');
	
	//---------------------------END POST------------------------------
	//call create
	ga.addParam('sysparm_name', 'create');
	
	try {
		
		ga.getXML(HelloWorldParse);
		
	} catch (e) {
		g_form.addErrorMessage("$CLIENT Error :" + className);
	}
	
	//TODO: post should return success or fail
	function HelloWorldParse(response) {
		var answer = response.responseXML.documentElement.getAttribute("answer");
		//alert(answer);
	}
}

function crud_remove(){
	
	var className = 'InguaneClientUtilTest2';
	var strQuery = 'short_description=Avelino V. Jazz.';
	//strQuery = strQuery + '^active=false';
	//var strQuery = 'active=false';
	g_form.addInfoMessage("$CLIENT: " + className );
	//create ajax object
	var ga = new GlideAjax('MiniJakartaCS');
	//provide the table
	ga.addParam('sysparm_table_name', 'x_58872_needit_needit');
	ga.addParam('sysparm_class_name',className);
	ga.addParam('sysparm_function_name','on_Load DELETE');
	//-------------------------- DATA TO DELETE ------------------
	
	ga.addParam('sysparm_strQuery', strQuery);
	ga.addParam('sysparm_short_description', 'Avelino V. Jazz.');
	//ga.addParam('sysparm_record_number','NI001001');
	ga.addParam('sysparm_u_requested_for_email', 'TWD@gmail.com');
	ga.addParam('sysparm_u_request_type', 'Logic');
	ga.addParam('sysparm_u_what_needed', 'Logic 4');
	ga.addParam('sysparm_u_when_needed', '2017-09-31 08:07:53');
	
	//---------------------------END DELETE------------------------------
	//invoke
	ga.addParam('sysparm_name', 'remove');
	
	try {
		
		ga.getXML(HelloWorldParse);
		
	} catch (e) {
		g_form.addErrorMessage("$CLIENT Error :" + className);
	}
	
	//TODO: post should return success or fail
	function HelloWorldParse(response) {
		var answer = response.responseXML.documentElement.getAttribute("answer");
		//alert(answer);
	}
}

//DEFAULT
function highlights(tableName,fieldName){
	//Highlight affected fields
	g_form.flash(tableName+'.'+fieldName, "#00FF00", -4);
	(function () {
		var myVar2 = g_form.getControl(fieldName);
		myVar2.style.width = '200px';
		myVar2.style.backgroundColor = 'yellow';
		myVar2.style.color = 'mediumblue';
		//myVar2.style.fontWeight = 'bold';
		(function (node) {
			var level = 1;
			var step = function () {
				var hex = level.toString(16);
				node.style.backgroundColor = '#FFFF' + hex + hex;
				if (level < 15) {
					level += 1;
					setTimeout(step, 100);
				}
			};
			setTimeout(step, 100);
		}(myVar2));
	}());
}
]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-09-22 03:45:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c293fca64f5503003b564ea18110c7be</sys_id>
        <sys_mod_count>196</sys_mod_count>
        <sys_name>UnitTEST</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_client_c293fca64f5503003b564ea18110c7be</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-10-13 06:41:22</sys_updated_on>
        <table>incident</table>
        <type>onLoad</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
