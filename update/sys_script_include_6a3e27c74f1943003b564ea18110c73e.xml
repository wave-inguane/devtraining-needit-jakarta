<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_58872_needit.PostInguaneSIBR</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>PostInguaneSIBR</name>
        <script><![CDATA[/*
Functionality:
Query the DataBase
Parameters - Type
inguaneDB - GlideRecord Instance
fieldKeyValuePairs - JSON containibg all pairs to be inserted
classAndFunctionName - JSON Object
Return:
All matches
 */
var PostInguaneSIBR = Class.create();
PostInguaneSIBR.prototype = {
	initialize: function() {
	},
	inguaneSiBrInsert: function (inguaneDB, classAndFunctionName) {
		var brsemaphore = { x: 1 };
			
			this._P(brsemaphore);//AquireLock
			//do work
			var gdt = new GlideDateTime();
			
			gs.addInfoMessage("$SERVER$: Script Include { GetInguaneSIBR } Invoked By: " + classAndFunctionName.ClassName + " " + classAndFunctionName.FunctionName + " @  " + gdt);
				inguaneDB.query();//needed to get the row count
				gs.addInfoMessage("$SERVER$: aquireLock : " + brsemaphore.x + " TOTAL RECORDS : " + inguaneDB.getRowCount());

				//Create a new Incident record and populate the fields with the values below
				inguaneDB.initialize();
	            //--Magic
				inguaneDB.insert();
				
				//finished work
				this._V(brsemaphore);//ReleaseLock
				gs.addErrorMessage("$SERVER$: releaseLock : " + brsemaphore.x + " TOTAL RECORDS : " + inguaneDB.getRowCount());
				return myArray;
			},
			_P: function (sem) {
				while (sem.x <= 0);
					sem.x--;
			},
			_V: function (sem) {
				sem.x++;
			},
			_getSystemTableFields: function (curretTable) {
				var inguane_sys_table_fields = curretTable;
				var found = 0;
				//var currentFields = [];
				inguane_sys_table_fields.initialize();
				for (var f in inguane_sys_table_fields) {
					//currentFields.push(f);
					gs.addInfoMessage(f + " : " + inguane_sys_table_fields[f]);
					found++;
				}
				gs.addErrorMessage("TOTAL FIELDS : " + found);
			},
			
			type: 'PostInguaneSIBR'
		};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-09-24 06:35:48</sys_created_on>
        <sys_id>6a3e27c74f1943003b564ea18110c73e</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>PostInguaneSIBR</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_6a3e27c74f1943003b564ea18110c73e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-09-25 07:49:03</sys_updated_on>
    </sys_script_include>
</record_update>
