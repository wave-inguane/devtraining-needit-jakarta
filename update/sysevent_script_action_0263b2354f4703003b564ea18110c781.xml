<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>false</active>
        <condition_script/>
        <description/>
        <event_name>workflow.notification</event_name>
        <name>Workflow Notification</name>
        <order>100</order>
        <script><![CDATA[/**
 * Handle a workflow.notification event by creating an email notification that can be sent
 *
 *   parm1 - sys_id of workflow activity,sys_id of workflow context
 *   parm2 - comma-separated list of recipients
 */
sendWorkflowNotification();

function sendWorkflowNotification() {
    // get the activity that defines the information about the event
    var parts = event.parm1.split(',');
    var activity = new GlideRecord('wf_activity');
    if (!activity.get(parts[0])) 
        return 0;
    
    // The EmailAction does not know how to handle ${workflow...} constructs so we need to handle those for it
    var context = new GlideRecord('wf_context');
    if (parts.length == 2) 
        context.get(parts[1]);
    
    GlideController.putGlobal("context", context);
    var workflow = new Workflow().workflow.newWorkflowProxy();
    GlideController.putGlobal("workflow", workflow);
    
    var subject = jsWorkflow(activity.vars.subject);
    var message = jsWorkflow(activity.vars.email);
    var emailAction = new GlideEmailAction();
    
    var emailGR = new GlideRecord('sysevent_email_action');
    emailGR.initialize();
    emailGR.event_parm_2 = true;
    emailGR.name = activity.getValue('name');
    emailGR.content_type = 'text/html';
    emailGR.subject = subject;
    emailGR.message = message;
    emailGR.weight = '-1';
    emailGR.send_self = true;
    emailAction.process(event, current, emailGR);
    return 0;
}

function jsWorkflow(str) {
	var gc = GlideController;
    var s = new String(str);
    
    // replace anything with ${workflow.x} to eval(workflow.x)
    s = s.replace(/\$\{(workflow\..*?)\s*\}/g, function(str, p1) {
        return (eval(p1) || "");
    });
    return s;
}
]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-16 04:56:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0263b2354f4703003b564ea18110c781</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Workflow Notification</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sysevent_script_action_0263b2354f4703003b564ea18110c781</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-16 04:56:25</sys_updated_on>
    </sysevent_script_action>
</record_update>
